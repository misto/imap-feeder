#!/usr/bin/env ruby

require 'rssimap'
require 'rssimap/createconfigparser'
require 'rssimap/rssimapconfig'
require 'rssimap/fakeserver.rb'

opts = CreateConfigParser.parse(ARGV)

$log = Logger.new($stdout)
$log.level = Logger::DEBUG

if opts.create
  $log.info "Creating new configuration"
  out = opts.out ? File.open(opts.out, "w") : $stdout
  RssImapConfig.create(opts.create_file, out, opts.folder)

elsif opts.check
  $log.info "Checking configuration #{opts.check}"
  RssImapConfig.check(File.open(opts.check))

elsif ARGV.first and load(ARGV.first)
  configuration = [$host, $user, $pass, $temp, $config]
  if not configuration.all?
    $stderr.puts "Your settings are incomplete, please review settings.rb:"
    $stderr.puts configuration.inspect
    exit 1
  end

  if File.exist? $running_instance
    $log.error "Already running (#{$running_instance})! Aborting..."
    exit 1
  else
    File.new($running_instance, "w")
  end

  store = MessageStore.new($temp)

  server_options = {
    :host => $host,
    :user => $user,
    :pass => $pass,
    :port => $port || "143",
    :use_ssl => $use_ssl || false
  }

  if opts.pretend
    @server = FakeServer.new(server_options)
    def store.save
    end
    $log = Logger.new(STDOUT)
  else
    begin
      @server = Server.new(server_options)
    rescue Exception => e
      $log.error "Could not open initial connection to server: #{e}"
    end
  end

  config = File.open($config)
  rssimap = RssImap.new(@server, store, config)
  rssimap.run
  @server.disconnect

  File.delete $running_instance

else
  puts "No options given, maybe you need --help?"
end

